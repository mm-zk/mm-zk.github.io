import{m as l,f as a,_ as d,g as m,h as c,i as T,j as g,k as b,l as v,o as f,c as x,s as I,d as k,t as B,q as w}from"./VC-URk-h.js";import{u as M}from"./bQKMbp-P.js";const R={base:"inline-flex items-center",rounded:"rounded-md",font:"font-medium",size:{xs:"text-xs px-1.5 py-0.5",sm:"text-xs px-2 py-1",md:"text-sm px-2 py-1",lg:"text-sm px-2.5 py-1.5"},color:{white:{solid:"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-900 dark:text-white bg-white dark:bg-gray-900"},gray:{solid:"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-800"},black:{solid:"text-white dark:text-gray-900 bg-gray-900 dark:bg-white"}},variant:{solid:"bg-{color}-500 dark:bg-{color}-400 text-white dark:text-gray-900",outline:"text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400",soft:"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400",subtle:"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400 ring-opacity-25 dark:ring-opacity-25"},default:{size:"sm",variant:"solid",color:"primary"}},A=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"bountyId",type:"uint256"},{indexed:!0,internalType:"address",name:"claimant",type:"address"}],name:"BountyAborted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"bountyId",type:"uint256"},{indexed:!1,internalType:"string",name:"repositoryName",type:"string"},{indexed:!1,internalType:"uint256",name:"pullRequestId",type:"uint256"},{indexed:!1,internalType:"string",name:"receiverGithubUsername",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"erc20Token",type:"address"}],name:"BountyAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"bountyId",type:"uint256"},{indexed:!0,internalType:"address",name:"claimant",type:"address"}],name:"BountyClaimed",type:"event"},{inputs:[{internalType:"uint256",name:"bountyId",type:"uint256"}],name:"abortBounty",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"},{internalType:"string",name:"receiverGithubUsername",type:"string"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"erc20Token",type:"address"},{components:[{internalType:"uint256",name:"abortTimestamp",type:"uint256"},{internalType:"enum ReceiverInvolvement",name:"receiverInvolvement",type:"uint8"},{internalType:"uint64",name:"degradationStartSeconds",type:"uint64"},{internalType:"uint64",name:"degradationEndSeconds",type:"uint64"}],internalType:"struct BountyConditions",name:"conditions",type:"tuple"}],name:"addBounty",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"bounties",outputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"},{internalType:"uint256",name:"receiverNFTTokenId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"erc20Token",type:"address"},{internalType:"bool",name:"claimed",type:"bool"},{components:[{internalType:"uint256",name:"abortTimestamp",type:"uint256"},{internalType:"enum ReceiverInvolvement",name:"receiverInvolvement",type:"uint8"},{internalType:"uint64",name:"degradationStartSeconds",type:"uint64"},{internalType:"uint64",name:"degradationEndSeconds",type:"uint64"}],internalType:"struct BountyConditions",name:"conditions",type:"tuple"},{internalType:"uint64",name:"previousBountyIndex",type:"uint64"},{internalType:"uint64",name:"previousUserBountyIndex",type:"uint64"},{internalType:"uint64",name:"bountyId",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"bountyId",type:"uint256"},{components:[{internalType:"string",name:"author",type:"string"},{internalType:"bool",name:"isMergedToMain",type:"bool"},{components:[{internalType:"string",name:"reviewer",type:"string"},{internalType:"uint64",name:"reviewerDuration",type:"uint64"},{internalType:"uint64",name:"authorDuration",type:"uint64"}],internalType:"struct ApprovedReviewer[]",name:"approvals",type:"tuple[]"}],internalType:"struct PRDetails",name:"details",type:"tuple"}],name:"claimBounty",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"devNFT",outputs:[{internalType:"contract ZKsyncDEVNFT",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"},{internalType:"uint256",name:"maxResults",type:"uint256"}],name:"getBounties",outputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"},{internalType:"uint256",name:"receiverNFTTokenId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"erc20Token",type:"address"},{internalType:"bool",name:"claimed",type:"bool"},{components:[{internalType:"uint256",name:"abortTimestamp",type:"uint256"},{internalType:"enum ReceiverInvolvement",name:"receiverInvolvement",type:"uint8"},{internalType:"uint64",name:"degradationStartSeconds",type:"uint64"},{internalType:"uint64",name:"degradationEndSeconds",type:"uint64"}],internalType:"struct BountyConditions",name:"conditions",type:"tuple"},{internalType:"uint64",name:"previousBountyIndex",type:"uint64"},{internalType:"uint64",name:"previousUserBountyIndex",type:"uint64"},{internalType:"uint64",name:"bountyId",type:"uint64"}],internalType:"struct CodeReviewBounties.Bounty[]",name:"result",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"}],name:"getBountiesCount",outputs:[{internalType:"uint64",name:"result",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"bountyId",type:"uint256"},{components:[{internalType:"string",name:"author",type:"string"},{internalType:"bool",name:"isMergedToMain",type:"bool"},{components:[{internalType:"string",name:"reviewer",type:"string"},{internalType:"uint64",name:"reviewerDuration",type:"uint64"},{internalType:"uint64",name:"authorDuration",type:"uint64"}],internalType:"struct ApprovedReviewer[]",name:"approvals",type:"tuple[]"}],internalType:"struct PRDetails",name:"details",type:"tuple"}],name:"getBountyEstimate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"githubUsername",type:"string"},{internalType:"uint256",name:"maxResults",type:"uint256"}],name:"getUserBounties",outputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"string",name:"repositoryName",type:"string"},{internalType:"uint256",name:"pullRequestId",type:"uint256"},{internalType:"uint256",name:"receiverNFTTokenId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"erc20Token",type:"address"},{internalType:"bool",name:"claimed",type:"bool"},{components:[{internalType:"uint256",name:"abortTimestamp",type:"uint256"},{internalType:"enum ReceiverInvolvement",name:"receiverInvolvement",type:"uint8"},{internalType:"uint64",name:"degradationStartSeconds",type:"uint64"},{internalType:"uint64",name:"degradationEndSeconds",type:"uint64"}],internalType:"struct BountyConditions",name:"conditions",type:"tuple"},{internalType:"uint64",name:"previousBountyIndex",type:"uint64"},{internalType:"uint64",name:"previousUserBountyIndex",type:"uint64"},{internalType:"uint64",name:"bountyId",type:"uint64"}],internalType:"struct CodeReviewBounties.Bounty[]",name:"result",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"githubUsername",type:"string"}],name:"getUserBountiesCount",outputs:[{internalType:"uint64",name:"result",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"gitHubOracle",outputs:[{internalType:"contract IGitHubOracle",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"latestBounty",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"latestUserBounty",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"numBounties",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"devNFTAddress",type:"address"}],name:"setDevNFT",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"oracleAddress",type:"address"}],name:"setGitHubOracleAddress",outputs:[],stateMutability:"nonpayable",type:"function"}],n=l(a.ui.strategy,a.ui.badge,R),S=m({inheritAttrs:!1,props:{size:{type:String,default:()=>n.default.size,validator(e){return Object.keys(n.size).includes(e)}},color:{type:String,default:()=>n.default.color,validator(e){return[...a.ui.colors,...Object.keys(n.color)].includes(e)}},variant:{type:String,default:()=>n.default.variant,validator(e){return[...Object.keys(n.variant),...Object.values(n.color).flatMap(t=>Object.keys(t))].includes(e)}},label:{type:[String,Number],default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})}},setup(e){const{ui:t,attrs:r}=c("badge",T(e,"ui"),n),{size:u,rounded:p}=M({ui:t,props:e}),s=g(()=>{var o,y;const i=((y=(o=t.value.color)==null?void 0:o[e.color])==null?void 0:y[e.variant])||t.value.variant[e.variant];return b(v(t.value.base,t.value.font,p.value,t.value.size[u.value],i==null?void 0:i.replaceAll("{color}",e.color)),e.class)});return{attrs:r,badgeClass:s}}});function h(e,t,r,u,p,s){return f(),x("span",w({class:e.badgeClass},e.attrs),[I(e.$slots,"default",{},()=>[k(B(e.label),1)])],16)}const U=d(S,[["render",h]]);export{A as B,U as _};
